/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Link overlay editor adjustments
 *
 * @since   1.0.0
 * @package Knight_Blocks
 */
.link-overlay {
  pointer-events: none; }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Shared editor plugin styling
 *
 * @since   1.0.0
 * @package Knight_Blocks
 */
.block-editor-url-input input[type=text] {
  width: 100%;
  border: 1px solid #757575; }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Paragraph features editor adjustments
 *
 * @since 1.0.0
 */
.editor-styles-wrapper p.is-style-featured {
  font-size: var(--font-size-medium); }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Image features editor adjustments
 *
 * @since 1.0.0
 */
.wp-block-image.is-style-boxed figcaption {
  z-index: 1; }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Editor fixes for group block features
 *
 * @since 1.0.0
 */
.is-style-pegasus-background .wp-block-group__inner-container::before {
  z-index: unset; }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * #.# Editor Styles
 *
 * CSS for just Backend enqueued after style.scss
 * which makes it higher in priority.
 */
.wp-block-cgb-block-knight-blocks {
  background: lightgreen;
  border: 0.2rem solid black;
  color: black;
  margin: 0 auto;
  max-width: 740px;
  padding: 2rem; }

.jimbo {
  color: cornflowerblue; }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Dynamic banner block editor adjustments
 *
 * @since 1.0.0
 */
.block-editor-block-list__layout.is-root-container > [data-type="knight-blocks/dynamic-banner"][data-align="full"] {
  margin-left: -10px;
  margin-right: -10px; }

.editor-styles-wrapper [data-type="knight-blocks/dynamic-banner"] [data-align="full"] {
  margin-top: 0;
  margin-bottom: 0; }

[data-type="knight-blocks/dynamic-banner"] .block-list-appender {
  display: none; }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Dynamic banner inherited "shared cover" editor adjustments
 *
 * @since 1.0.0
 */
[data-align="full"] [data-type="knight-blocks/dynamic-banner-shared-cover"] {
  max-width: none; }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Dynamic banner block additional content editor adjustments
 *
 * @since 1.0.0
 */
.block-editor-block-list__block[data-type="knight-blocks/dynamic-banner-addl"],
.wp-block-knight-blocks-dynamic-banner-addl,
.wp-block-knight-blocks-dynamic-banner-addl .block-editor-block-list__layout {
  position: static; }

.wp-block-knight-blocks-dynamic-banner-addl {
  display: block;
  pointer-events: all; }
  .wp-block-knight-blocks-dynamic-banner-addl > .block-editor-inner-blocks > .block-editor-block-list__layout {
    position: relative;
    z-index: 1;
    display: grid;
    grid-template-columns: var(--content-grid-template-columns);
    grid-gap: 1rem var(--content-grid-column-gap);
    pointer-events: none; }
    .wp-block-knight-blocks-dynamic-banner-addl > .block-editor-inner-blocks > .block-editor-block-list__layout > * {
      grid-column: 2;
      pointer-events: all; }
    @media (min-width: 60em) {
      .wp-block-knight-blocks-dynamic-banner-addl > .block-editor-inner-blocks > .block-editor-block-list__layout {
        -ms-flex-line-pack: start;
            align-content: start;
        justify-items: end;
        grid-row-gap: 2.25rem;
        position: absolute;
        top: var(--grouped-padding);
        right: 0;
        left: 0;
        bottom: 0; }
        .wp-block-knight-blocks-dynamic-banner-addl > .block-editor-inner-blocks > .block-editor-block-list__layout > * {
          width: var(--dynamic-banner-addl-width); } }
    @media (min-width: 87.5em) {
      .wp-block-knight-blocks-dynamic-banner-addl > .block-editor-inner-blocks > .block-editor-block-list__layout {
        top: calc(var(--content-spacing) * 2.75); } }
  @media (min-width: 60em) {
    .wp-block-knight-blocks-dynamic-banner-addl .wp-block-knight-blocks-cta-card-compact {
      position: relative;
      width: 100%;
      max-width: none;
      -webkit-transform: none;
          -ms-transform: none;
              transform: none; }
    .editor-styles-wrapper .wp-block-knight-blocks-dynamic-banner-addl [data-type="knight-blocks/cta-card-compact"] {
      position: absolute;
      bottom: 0;
      left: 0;
      width: 40.5rem;
      max-width: calc(100% - var(--dynamic-banner-addl-width) - 10%);
      -webkit-transform: translateY(calc(100% - 4rem));
          -ms-transform: translateY(calc(100% - 4rem));
              transform: translateY(calc(100% - 4rem)); } }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Dynamic banner menu editor adjustments
 *
 * @since 1.0.0
 */
.editor-styles-wrapper .dynamic-banner-menu {
  padding: 1rem 0; }
  .editor-styles-wrapper .dynamic-banner-menu a {
    padding: 0.6rem 1.25rem 0.6rem 3.5rem; }
    .editor-styles-wrapper .dynamic-banner-menu a, .editor-styles-wrapper .dynamic-banner-menu a:visited {
      color: var(--color-white); }
  .editor-styles-wrapper .dynamic-banner-menu .featured a {
    padding-top: 0.9625rem;
    padding-bottom: 0.9625rem; }
    .editor-styles-wrapper .dynamic-banner-menu .featured a, .editor-styles-wrapper .dynamic-banner-menu .featured a .svg-inline--fa {
      color: var(--color-black); }
  @media (min-width: 90em) {
    .editor-styles-wrapper .dynamic-banner-menu {
      padding-top: 1.125rem;
      padding-bottom: 1.125rem; }
      .editor-styles-wrapper .dynamic-banner-menu a {
        padding: 0.75rem 1.75rem 0.75rem 4rem; }
      .editor-styles-wrapper .dynamic-banner-menu .featured a {
        padding-top: 1rem;
        padding-bottom: 1rem; } }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Compact CTA card editor adjustments
 *
 * @since 1.0.0
 */
@media (min-width: 48em) {
  .wp-block-knight-blocks-cta-card-compact > .block-editor-inner-blocks {
    grid-column: 2;
    grid-row: 1 / -1; } }

@media (min-width: 60em) {
  .editor-styles-wrapper .cta-card-heading {
    font-size: calc(22 / var(--global-font-size) * 1rem); } }
@charset "UTF-8";
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Side-captioned gallery item editor compatibility
 *
 * @since   1.0.0
 * @package Knight_Blocks
 */
.wp-block-knight-blocks-side-caption-gallery-item a {
  -ms-flex-item-align: end;
      align-self: end;
  justify-self: start;
  padding: 5px 14px;
  font-size: calc(14 / var(--global-font-size) * 1rem);
  background: rgba(25, 25, 25, 0.66);
  text-decoration: none; }
  .wp-block-knight-blocks-side-caption-gallery-item a::before {
    content: "Admin: "; }
  .wp-block-knight-blocks-side-caption-gallery-item a:hover, .wp-block-knight-blocks-side-caption-gallery-item a:focus {
    background: var(--color-black); }
  .wp-block-knight-blocks-side-caption-gallery-item a:not([data-featherlight])::after {
    content: "↗"; }

.editor-styles-wrapper .wp-block-knight-blocks-side-caption-gallery-item a {
  opacity: 1; }
  .editor-styles-wrapper .wp-block-knight-blocks-side-caption-gallery-item a, .editor-styles-wrapper .wp-block-knight-blocks-side-caption-gallery-item a:visited {
    color: var(--color-white); }

.editor-styles-wrapper .wp-block-knight-blocks-side-caption-gallery-item img {
  height: 100%; }

@media (min-width: 37.5em) {
  [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) figcaption {
    left: auto;
    right: 100%; }
    [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) figcaption::before {
      left: auto;
      right: -10px; }
  [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) .type-icon {
    padding-right: 0.55rem; }
  [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) .type-label {
    right: 2rem;
    left: auto; }
    [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) .type-label::before {
      left: auto;
      right: 0;
      -webkit-transform: translateX(calc(100% + 8px)) translateY(-50%);
          -ms-transform: translateX(calc(100% + 8px)) translateY(-50%);
              transform: translateX(calc(100% + 8px)) translateY(-50%); } }

@media (min-width: 60em) {
  [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) figcaption,
  [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) figcaption {
    left: 100%;
    right: auto; }
    [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) figcaption::before,
    [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) figcaption::before {
      left: -10px;
      right: auto; }
  [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) .type-icon,
  [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) .type-icon {
    padding-right: 0; }
  [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) .type-label,
  [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) .type-label {
    right: auto;
    left: 2rem; }
    [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) .type-label::before,
    [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(2n) .type-label::before {
      left: 0;
      right: right;
      -webkit-transform: translateX(calc(-100% - 8px)) translateY(-50%);
          -ms-transform: translateX(calc(-100% - 8px)) translateY(-50%);
              transform: translateX(calc(-100% - 8px)) translateY(-50%); }
  [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) figcaption,
  [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) figcaption {
    left: auto;
    right: 100%; }
    [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) figcaption::before,
    [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) figcaption::before {
      left: auto;
      right: -10px; }
  [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) .type-icon,
  [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) .type-icon {
    padding-right: 0.55rem; }
  [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) .type-label,
  [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) .type-label {
    right: 2rem;
    left: auto; }
    [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) .type-label::before,
    [data-type="knight-blocks/side-caption-gallery"][data-align="full"] [data-type="knight-blocks/side-caption-gallery-item"]:nth-child(4n) .type-label::before {
      left: auto;
      right: 0;
      -webkit-transform: translateX(calc(100% + 8px)) translateY(-50%);
          -ms-transform: translateX(calc(100% + 8px)) translateY(-50%);
              transform: translateX(calc(100% + 8px)) translateY(-50%); } }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Side-captioned gallery editor compatibility
 *
 * @since   1.0.0
 * @package Knight_Blocks
 */
[data-type="knight-blocks/side-caption-gallery"] .block-editor-block-list__layout {
  display: grid;
  gap: var(--side-caption-gallery-gap); }

@media (min-width: 37.5em) {
  [data-type="knight-blocks/side-caption-gallery"] .block-editor-block-list__layout {
    grid-template-columns: repeat(2, 1fr); } }

@media (min-width: 60em) {
  [data-type="knight-blocks/side-caption-gallery"][data-align="wide"] .block-editor-block-list__layout,
  [data-type="knight-blocks/side-caption-gallery"][data-align="full"] .block-editor-block-list__layout {
    grid-template-columns: repeat(4, 1fr); } }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Arrow link block editor adjustments
 *
 * @since   1.0.0
 * @package Knight_Blocks
 */
.editor-styles-wrapper .wp-block-knight-blocks-arrow-link,
.editor-styles-wrapper .wp-block-knight-blocks-arrow-link:visited {
  color: var(--color-black); }

.editor-styles-wrapper .wp-block-knight-blocks-arrow-link, .editor-styles-wrapper .wp-block-knight-blocks-arrow-link:visited {
  color: var(--color-black); }

.has-black-background-color .wp-block-knight-blocks-arrow-link, .has-black-background-color .wp-block-knight-blocks-arrow-link:visited,
.has-dark-gray-gradient-background .wp-block-knight-blocks-arrow-link,
.has-dark-gray-gradient-background .wp-block-knight-blocks-arrow-link:visited,
.has-dark-gray-overlay-gradient-background .wp-block-knight-blocks-arrow-link,
.has-dark-gray-overlay-gradient-background .wp-block-knight-blocks-arrow-link:visited,
.has-dark-gray-overlay-to-right-gradient-background .wp-block-knight-blocks-arrow-link,
.has-dark-gray-overlay-to-right-gradient-background .wp-block-knight-blocks-arrow-link:visited,
.has-background-dim .wp-block-knight-blocks-arrow-link,
.has-background-dim .wp-block-knight-blocks-arrow-link:visited {
  color: var(--color-white); }

.wp-block-knight-blocks-arrow-link .svg-inline--fa {
  display: inline-block; }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Product block editor fixes
 *
 * @since   1.0.0
 * @package Knight_Blocks
 */
.editor-styles-wrapper .product-thumbnail-wrap img {
  max-width: 10.625rem; }
/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/
/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
/**
 * Products block editor compatibility
 *
 * @since   1.0.0
 * @package Knight_Blocks
 */
[data-type="knight-blocks/products"] .block-editor-block-list__layout {
  display: grid;
  gap: 1.875rem; }
  @media (min-width: 48em) {
    [data-type="knight-blocks/products"] .block-editor-block-list__layout {
      grid-template-columns: repeat(auto-fit, minmax(19.0625rem, 1fr)); } }
