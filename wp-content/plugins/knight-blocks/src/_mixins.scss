/**
 * Misc editor + FE shared mixins
 *
 * @since 1.0.0
 */
@mixin dynamic-banner-addl-wrap {
	position: relative;
	z-index: 1; // layer over dynamic banner cover background/overlay
	display: grid;
	grid-template-columns: var(--content-grid-template-columns);
	grid-gap: 1rem var(--content-grid-column-gap);
	pointer-events: none; // make cover inner blocks selectable

	> * {
		grid-column: 2;
		pointer-events: all; // restore
	}

	// span full content area but anchor stuff to right side
	@media ($mq-content) {
		align-content: start; // anchor top
		justify-items: end; // anchor right
		grid-row-gap: 2.25rem;
		position: absolute;
		top: var(--grouped-padding);
		right: 0;
		left: 0;
		bottom: 0;

		> * {
			width: var(--dynamic-banner-addl-width);
		}
	}

	@media ($mq-large-content) {
		top: calc(var(--content-spacing) * 2.75);
	}
}

@mixin dynamic-banner-addl-cta {
	position: absolute;
	bottom: 0;
	left: 0;
	width: 40.5rem;
	max-width: calc(100% - var(--dynamic-banner-addl-width) - 10%);
	transform: translateY(calc(100% - 4rem));
}

/**
 * Do side-captioned gallery item caption positioning
 *
 * @param integer $child  Which child to position to the left (or revert to right)
 * @param boolean $revert Re-position back to default (right side)
 *
 * @since 1.0.0
 */
@mixin side-caption-gallery-item-position( $child: 2, $revert: false ) {

	@if $revert == false {
		&:nth-child(#{$child}n) {
			figcaption {
				left: auto;
				right: 100%;

				&::before {
					left: auto;
					right: -10px;
				}
			}

			.type-icon {
				padding-right: 0.55rem;
			}

			.type-label {
				right: 2rem;
				left: auto;

				&::before {
					left: auto;
					right: 0;
					transform: translateX(calc(100% + 8px)) translateY(-50%);
				}
			}
		}
	}

	@else {
		&:nth-child(#{$child}n) {
			figcaption {
				left: 100%;
				right: auto;

				&::before {
					left: -10px;
					right: auto;
				}
			}

			.type-icon {
				padding-right: 0;
			}

			.type-label {
				right: auto;
				left: 2rem;
				&::before {
					left: 0;
					right: right;
					transform: translateX(calc(-100% - 8px)) translateY(-50%);
				}
			}
		}
	}
}
